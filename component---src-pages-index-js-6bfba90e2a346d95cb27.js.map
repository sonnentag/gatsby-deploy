{"version":3,"file":"component---src-pages-index-js-6bfba90e2a346d95cb27.js","mappings":"kMAKMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACf,uBAAKC,UAAU,oBACX,uBAAKA,UAAU,aACX,gBAAC,KAAD,CAAMC,GAAIF,GACLA,MAUjBD,EAAWI,aAAe,CACtBH,IAAI,IAGR,Q,SChBMI,EAAU,IAAIC,IAiEpB,EA/DiB,SAAC,GAAD,UAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,EAAmBC,QAAnB,OACf,gCACE,gBAAC,IAAD,CAAKC,MAAM,SACV,UAAAH,EAASI,aAAT,SAAgBC,MAAQ,kCAAUL,EAASI,MAAMC,MAAzB,KAAwC,KACjE,uBAAKV,UAAU,kCACd,UAAAK,EAASI,aAAT,SAAgBC,OAAkC,UAAzBL,EAASI,MAAMC,MACnCJ,EAAKK,MAAMC,SAASC,KAAI,SAAAC,GAAI,OACvB,gBAAC,EAAD,CAAYf,IAAKe,OAEtB,UAAAT,EAASI,aAAT,SAAgBC,OAAkC,aAAzBL,EAASI,MAAMC,MAE1C,gBAACK,EAAA,EAAD,CAAMC,MAAI,EAACC,iBAAiB,MAAMC,GAAG,YAAYlB,UAAU,OACvD,gBAACmB,EAAA,EAAD,CAAKC,SAAS,MAAMZ,MAAM,oBAAoBR,UAAU,QACrDM,EAAKe,SAASC,MAAMT,KAAI,SAAAC,GAAI,OAAMA,EAAKO,SACpCE,QAAO,SAAAxB,GAAG,MAAsB,QAAlBA,EAAIyB,aAClBX,KAAI,SAAAd,GACH,IAAII,EAAQsB,IAAI1B,EAAI2B,SACjB,OAD6BvB,EAAQwB,IAAI5B,EAAI2B,SACtC,gBAAC,EAAD,CAAY3B,IAAKA,EAAI2B,iBAMtC,gBAACP,EAAA,EAAD,CAAKC,SAAS,OAAOZ,MAAM,gBAAgBR,UAAU,QAClDM,EAAKe,SAASC,MAAMT,KAAI,SAAAC,GAAI,OAAMA,EAAKO,SACpCE,QAAO,SAAAxB,GAAG,MAAsB,SAAlBA,EAAIyB,aAClBX,KAAI,SAAAd,GACH,IAAII,EAAQsB,IAAI1B,EAAI2B,SACjB,OAD6BvB,EAAQwB,IAAI5B,EAAI2B,SACtC,gBAAC,EAAD,CAAY3B,IAAKA,EAAI2B,kBAOxC,uBAAK1B,UAAU,iCAAf","sources":["webpack://pkg-trkr/./src/components/pkgListRow.js","webpack://pkg-trkr/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\n\nconst PkgListRow = ({ pkg }) => (\n    <div className=\"d-flex resultRow\">\n        <div className=\"flex-fill\">\n            <Link to={pkg}>\n                {pkg}\n            </Link>\n        </div>\n    </div>\n)\n\nPkgListRow.propTypes = {\n    pkg: PropTypes.string,\n}\n\nPkgListRow.defaultProps = {\n    pkg: ``,\n}\n\nexport default PkgListRow\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Tab, Tabs } from 'react-bootstrap';\nimport PkgListRow from \"../components/pkgListRow\"\n\nimport Seo from \"../components/seo\"\n\nconst pkgList = new Set();\n\nconst MainPage = ({ location, data, pkglist }) => (\n  <>\n    <Seo title=\"Main\" />\n    {location.state?.query ? <h2> all {location.state.query} </h2> : null }\n    <div className=\"table-responsive w-75 p-4 mx-5\">\n    {location.state?.query && location.state.query === 'repos'\n        ? data.repos.distinct.map(node => (\n               <PkgListRow pkg={node} />\n        ))\n        : location.state?.query && location.state.query === 'packages'\n        ? \n        <Tabs fill defaultActiveKey=\"php\" id=\"basicTabs\" className=\"m-3\">\n            <Tab eventKey=\"php\" title=\"Composer packages\" className=\"mx-5\">\n             { data.packages.nodes.map(node => ( node.packages\n                 .filter(pkg => pkg.installer === \"php\")\n                 .map(pkg => {\n                   if(!pkgList.has(pkg.package)) { pkgList.add(pkg.package);\n                      return <PkgListRow pkg={pkg.package} />\n                     }\n                   }\n                )\n             ))}\n            </Tab>\n            <Tab eventKey=\"node\" title=\"Node packages\" className=\"mx-5\">\n             { data.packages.nodes.map(node => ( node.packages\n                 .filter(pkg => pkg.installer === \"node\")\n                 .map(pkg => {\n                   if(!pkgList.has(pkg.package)) { pkgList.add(pkg.package);\n                      return <PkgListRow pkg={pkg.package} />\n                     }\n                   }\n                )\n             ))}\n            </Tab>\n        </Tabs>\n        : <div className=\"d-flex justify-content-center\">Please select either repos or packages from the menu above.</div>\n    }\n    </div>\n  </>\n)\n\nexport const query = graphql`\n  query {\n    packages: allDataJson (sort: { fields: packages___package, order: ASC }) {\n      distinct(field: packages___package)\n        nodes {\n            packages {\n              package\n              installer\n            }\n        }\n    }\n    repos: allDataJson (sort: { fields: packages___repo, order: ASC }) {\n      distinct(field: packages___repo)\n        nodes {\n            packages {\n              repo\n            }\n        }\n      }\n  }\n`\n\nexport default MainPage\n"],"names":["PkgListRow","pkg","className","to","defaultProps","pkgList","Set","location","data","pkglist","title","state","query","repos","distinct","map","node","Tabs","fill","defaultActiveKey","id","Tab","eventKey","packages","nodes","filter","installer","has","package","add"],"sourceRoot":""}