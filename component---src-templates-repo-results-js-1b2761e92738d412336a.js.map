{"version":3,"file":"component---src-templates-repo-results-js-1b2761e92738d412336a.js","mappings":"qKAOA,GAAsB,oBAAXA,OACIA,OAAOC,SAASC,SAwD/B,UApDoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,EAAeC,OAAf,OAChB,gCACE,gBAAC,IAAD,CAAKC,MAAM,YACjB,uBAAKC,UAAU,2BACT,yBAAOA,UAAU,mDACf,6BACE,0BACE,sBAAIC,MAAM,UAAV,mBAAoCJ,EAAKK,UAAU,IACnD,sBAAID,MAAM,UAAV,cAKR,gBAAC,IAAD,CAAME,MAAI,EAACC,iBAAiB,MAAMC,GAAG,YAAYL,UAAU,OACnD,gBAAC,IAAD,CAAKM,SAAS,MAAMP,MAAM,oBAAoBC,UAAU,QACtDJ,EAAKW,SAASC,SAASC,KAAI,SAAAC,GAAI,MACX,OAAlBA,EAAKC,UACL,uBAAKX,UAAU,oBACb,uBAAKA,UAAU,kBAAkBU,EAAKE,SACtC,uBAAKZ,UAAU,aAAaU,EAAKG,UAEnC,SAGJ,gBAAC,IAAD,CAAKP,SAAS,OAAOP,MAAM,gBAAgBC,UAAU,QACnDJ,EAAKW,SAASC,SAASC,KAAI,SAAAC,GAAI,MACX,QAAlBA,EAAKC,UACL,uBAAKX,UAAU,oBACb,uBAAKA,UAAU,kBAAkBU,EAAKE,SACtC,uBAAKZ,UAAU,aAAaU,EAAKG,UAEnC","sources":["webpack://pkg-trkr/./src/templates/repoResults.js"],"sourcesContent":["import * as React from \"react\"\nimport { Table } from \"react-bootstrap\"\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { graphql, Link } from \"gatsby\"\nimport Seo from \"../components/seo\"\n\nif (typeof window !== \"undefined\") {\n    let path = window.location.pathname;\n}\n\n/* template for pages created for all packages in selected repo */\nconst RepoResults = ({ data, path, search }) => (\n    <>\n      <Seo title=\"Results\" />\n<div className=\"table-responsive w-auto\"> \n      <table className=\"table table-hover table-condensed table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"column\">All packages in {path.substring(1)}</th>\n            <th scope=\"column\">Version</th>\n          </tr>\n        </thead>\n      </table>\n\n    <Tabs fill defaultActiveKey=\"php\" id=\"basicTabs\" className=\"m-3\">\n            <Tab eventKey=\"php\" title=\"Composer packages\" className=\"mx-5\">\n            { data.dataJson.packages.map(node => (\n                node.installer == 'php' ?\n                <div className=\"d-flex resultRow\">\n                  <div className=\"w-50 flex-fill\">{node.package}</div>\n                  <div className=\"flex-fill\">{node.version}</div>\n                </div>\n              : null\n            ))}\n            </Tab>\n            <Tab eventKey=\"node\" title=\"Node packages\" className=\"mx-5\">\n            { data.dataJson.packages.map(node => (\n                node.installer == 'node' ?\n                <div className=\"d-flex resultRow\">\n                  <div className=\"w-50 flex-fill\">{node.package}</div>\n                  <div className=\"flex-fill\">{node.version}</div>\n                </div>\n              : null\n            ))}\n            </Tab>\n            </Tabs>\n      </div>\n    </>\n)\n\nexport const query = graphql`\n  query RepoQuery($repoName: String) {\n    dataJson(packages: {elemMatch: {repo: {eq: $repoName}}}) {\n      packages {\n        version\n        repo\n        package\n        installer\n      }\n    }\n  }\n`\n\nexport default RepoResults\n"],"names":["window","location","pathname","data","path","search","title","className","scope","substring","fill","defaultActiveKey","id","eventKey","dataJson","packages","map","node","installer","package","version"],"sourceRoot":""}